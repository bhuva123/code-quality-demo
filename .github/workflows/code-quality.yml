name: PMD and SpotBugs Lint

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  security-events: write

jobs:
  pmd_lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install PMD
        run: |
          sudo apt-get update && sudo apt-get install unzip -y
          curl -L https://github.com/pmd/pmd/releases/download/pmd_releases%2F6.42.0/pmd-bin-6.42.0.zip -o pmd.zip
          unzip -o pmd.zip -d pmd-extracted
          echo "PMD_BIN_DIR=$(pwd)/pmd-extracted/pmd-bin-6.42.0/bin" >> $GITHUB_ENV

      - name: Run PMD and generate JSON
        continue-on-error: true
        run: |
          bash $PMD_BIN_DIR/run.sh pmd \
            -d src \
            -f json \
            -R rulesets/java/quickstart.xml \
            --cache .pmdCache > pmd-report.json
          [ -s pmd-report.json ] || echo '{"files": []}' > pmd-report.json

      - name: Convert PMD JSON to SARIF
        run: |
          python3 - <<EOF
          import json
          with open("pmd-report.json") as f: data = json.load(f)
          sarif = {
              "version": "2.1.0",
              "runs": [{
                  "tool": {
                      "driver": {
                          "name": "PMD",
                          "informationUri": "https://pmd.github.io/",
                          "rules": []
                      }
                  },
                  "results": [
                      {
                          "ruleId": v["rule"],
                          "message": {"text": v["description"]},
                          "locations": [{
                              "physicalLocation": {
                                  "artifactLocation": {"uri": f["filename"]},
                                  "region": {"startLine": v["beginline"]}
                              }
                          }]
                      } for f in data.get("files", []) for v in f.get("violations", [])
                  ]
              }]
          }
          with open("pmd-report.sarif", "w") as f: json.dump(sarif, f, indent=2)
          EOF

      - name: Upload PMD SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pmd-report.sarif
          category: pmd

      - name: Show PMD Summary
        if: always()
        continue-on-error: true
        run: |
          echo "## üìå PMD Issues" >> $GITHUB_STEP_SUMMARY
          echo "| File | Line | Rule | Message |" >> $GITHUB_STEP_SUMMARY
          echo "|------|------|------|---------|" >> $GITHUB_STEP_SUMMARY

          jq -c '.files[] | .filename as $f | .violations[] | {file: $f, line: .beginline, rule: .rule, message: .description}' pmd-report.json | while read -r line; do
            file=$(echo "$line" | jq -r '.file')
            line=$(echo "$line" | jq -r '.line')
            rule=$(echo "$line" | jq -r '.rule')
            msg=$(echo "$line" | jq -r '.message' | sed 's/|/\\|/g')
            echo "| $file | $line | $rule | $msg |" >> $GITHUB_STEP_SUMMARY
          done

  spotbugs_lint:
    runs-on: ubuntu-latest
    needs: pmd_lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install SpotBugs
        run: |
          curl -L https://github.com/spotbugs/spotbugs/releases/download/4.8.3/spotbugs-4.8.3.tgz -o spotbugs.tgz
          tar -xzf spotbugs.tgz

      - name: Add Java file with known issue (test)
        run: |
          mkdir -p src/test
          cat <<EOF > src/test/DeadStoreExample.java
          package test;

          public class DeadStoreExample {
              public static void main(String[] args) {
                  int x = 42; // dead store
                  System.out.println("Hello");
              }
          }
          EOF

      - name: Compile Java source
        run: |
          mkdir -p target/classes
          javac -d target/classes $(find src -type f -name "*.java")

      - name: Debug: List compiled class files
        run: |
          echo "üì¶ Compiled classes:"
          find target/classes -name "*.class"

      - name: Run SpotBugs and generate SARIF
        run: |
          mkdir -p reports/spotbugs
          chmod +x ./spotbugs-4.8.3/bin/spotbugs

          ./spotbugs-4.8.3/bin/spotbugs \
            -textui \
            -sarif:reports/spotbugs/spotbugs.sarif \
            -effort:max \
            -low \
            target/classes || echo "‚ö†Ô∏è SpotBugs returned non-zero exit"

          # Ensure SARIF exists
          if [ ! -f reports/spotbugs/spotbugs.sarif ]; then
            echo '{"version": "2.1.0", "runs": [{"tool": {"driver": {"name": "SpotBugs"}}, "results": []}]}' > reports/spotbugs/spotbugs.sarif
            echo "üìÑ Created empty SARIF to avoid upload failure"
          fi

      - name: Optional Debug: Show SpotBugs XML
        run: |
          ./spotbugs-4.8.3/bin/spotbugs \
            -textui \
            -effort:max \
            -low \
            -xml:withMessages \
            -output spotbugs-debug.xml \
            target/classes
          echo "üîç SpotBugs XML Report:"
          cat spotbugs-debug.xml || true

      - name: Upload SpotBugs SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/spotbugs/spotbugs.sarif
          category: spotbugs
